{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.LoginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/res.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/errs.IncorrectPasswordError"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/res.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/errs.UserNotFoundError"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/res.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/errs.ValidationFailedError"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Logout user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/res.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/errs.AuthError"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User register",
                "parameters": [
                    {
                        "description": "Register credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.RegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/res.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/errs.AppError"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/res.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/errs.AlreadyExistsError"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/res.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/errs.ValidationFailedError"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errs.AlreadyExistsError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "ALREADY_EXISTS"
                },
                "message": {
                    "type": "string",
                    "example": "User already exists."
                },
                "status": {
                    "type": "integer",
                    "example": 409
                }
            }
        },
        "errs.AppError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "errs.AuthError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "AUTH_FAILED"
                },
                "message": {
                    "type": "string",
                    "example": "Failded authorize user."
                },
                "status": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "errs.IncorrectPasswordError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "INCORRECT_PASSWORD"
                },
                "message": {
                    "type": "string",
                    "example": "Incorrect password."
                },
                "status": {
                    "type": "integer",
                    "example": 401
                }
            }
        },
        "errs.UserNotFoundError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "USER_NOT_FOUND"
                },
                "message": {
                    "type": "string",
                    "example": "User not found."
                },
                "status": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "errs.ValidationFailedError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "VALIDATION"
                },
                "message": {
                    "type": "string",
                    "example": "Validation error."
                },
                "status": {
                    "type": "integer",
                    "example": 422
                }
            }
        },
        "req.LoginUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 8
                }
            }
        },
        "req.RegisterUserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "minLength": 3
                },
                "password": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 8
                }
            }
        },
        "res.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/errs.AppError"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "res.SuccessResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    }
}